[package]
name = "midly_smf"
version = "0.1.0"
edition = "2018"
authors = ["negamartin"]
include = [
  "/src/*",
  "/Cargo.toml",
]
description = "Fast MIDI decoder and encoder both for .mid files and real-time MIDI events"
repository = "https://github.com/negamartin/midly"
readme = "README.md"
keywords = ["midi", "no_std", "audio", "parser"]
categories = ["multimedia::audio", "multimedia::encoding", "multimedia"]
license = "Unlicense"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["alloc", "std", "parallel"]

# Reject corrupted or uncompliant files, even if they could be read anyway.
#
# `ErrorKind::Malformed` errors will only be raised when this feature is enabled.
strict = []

# Enable the `alloc` dependency.
#
# Disabling this feature leaves pretty much only the raw `parse` and `write` functions, but makes
# the crate fully `no_std`.
# If this feature is enabled, but the `std` feature is not, the crate becomes `no_std + alloc`.
alloc = ["midly_core/alloc"]

# Integrate with the `std` library.
# Depends on the `alloc` feature.
std = ["alloc", "midly_core/std"]

# Enable multithreaded parsing.
# Depends on the `std` feature.
#
# Multithreaded parsing is automatically disabled for tiny MIDI files.
# Currently, multithreading brings in the `rayon` dependency.
parallel = ["std", "rayon"]


[dependencies]
midly_core = { path = "../midly_core", default-features = false }
rayon = { version = "1", optional = true }

[dev-dependencies]
midly_rawstream = { path = "../midly_rawstream" }
